常亮, 支持自定义，使用 __自定义__

__URL__         //路由地址
__ROOT__        //根目录
__STATIC__      //static目录
__CSS__         //css目录
__JS__          //js目录

变量

{$var}

在模板中使用系统变量


{$Think.server.HTTP_HOST}
{$Think.env.PHP_APP_STATUS}
{$Think.session.name}
{$Think.cookie.id}

{$Think.request.id}
{$Think.get.id}
{$Think.post.id}
{$Think.const.APP_PATH}  // 获取系统常量
{$Think.APP_PATH}       // 获取系统常量，可省略const，直接加常量名

只是通道函数以及参数

{$email|md5}
{$email|md5|strtoupper}
{$email|default='123456@qq.com'}
{$email|substr=0,8}
{$email|substr=###,0,8}
{$time|date='Y-m-d',###}

语言函数

{:__('string')}

原样输出

{literal}
    {$var}
{/literal}

<!-- html注释 用户可见 -->

{/* 多行模板注释 用户不可见 */}
{// 模板注释 用户不可见 }

循环

{volist name='list' id='ov' key='i' offset='0' length='2' mod='1' empty='$empty'}
    {$mod}  // 取余结果
    {$i}   // 循环次数 默认i
    {$ov.name}
{/volist}


foreach循环

{foreach $list as $vo}
    {$vo.name}
{/foreach}
{foreach name='list' item='vo' key='key'}
    {$key} <!-- 数组下标 默认$key -->
    {$vo.name}
{/foreach}

for循环

{for start='1' end='10' step='2' name='i'}
    {$i} <!-- 默认i-->
{/for}

比较标签

相等

<!-- eq 或者 equal -->
{eq name='a' value='$b'}
    <p>equal</p>
{else}
    <p>not equal</p> 
{/eq}

不相等

<!-- neq 或者 notequal -->
{neq name='a' value='10'}
    <p>not equal</p>
{else}
    <p>equal</p> 
{/neq}

大于

<!-- gt -->
{gt name='a' value='10'}
    <p>greater than</p>
{else}
    <p>not greater than</p> 
{/gt}

小于

<!-- lt -->
{lt name='a' value='10'}
    <p>less than</p>
{else}
    <p>not less than</p> 
{/lt}

大于等于

<!-- egt -->
{egt name='a' value='10'}
    <p>equal or greater than</p>
{else}
    <p>less than</p> 
{/egt}

小于等于

<!-- elt -->
{elt name='a' value='10'}
    <p>equal or less than</p>
{else}
    <p>greater than</p> 
{/elt}
（4）条件判断
switch

{switch name="Tink.get.level"}
    {case value="1|2"}1{/case} <!--多值竖线分隔-->
    {case value="3"}2{/case}
    {case value="4"}3{/case}
    {default /}4
{/switch}

range

{range name="Think.get.level" value="1,2,3" type="in"}
    <p>in</p>
{else}
    <p>not in</p>
{/range}

{in name="Think.get.level" value="1,2,3"}
    <p>in</p>
{else}
    <p>not in</p>
{/in}

{range name="Think.get.level" value="1,2,3" type="notin"}
    <p>not in</p>
{else}
    <p>in</p>
{/range}

{notin name="Think.get.level" value="1,2,3"}
    <p>not in</p>
{else}
    <p>in</p>
{/notin}

{range name="Think.get.level" value="1,3" type="between"}
    <p>between</p>
{else}
    <p>not between</p>
{/range}

{range name="Think.get.level" value="1,3" type="notbetween"}
    <p>not between</p>
{else}
    <p>between</p>
{/range}

defined 定义

{defined name="APP_PATH"}
    <p>defined</p>
{else}
    <p>not defined</p>
{/defined}

if 控制

{if condition="($Think.get.level == 1) AND ($Think.get.id == 10)"}
    <p>success</p>
{else}
    <p>fail</p> 
{/if}

3、模板布局
（1）模版引入
{include file="common/nav" /}
（2）模板继承
{extend name="common/base" /}
被继承的文件预留坑位, 继承后可以重写

{block name="ID"}
    原始内容
{/block}
继承后可以保留原有内容

{block name="ID"}
    重写内容 + {__block__}
{/block}


{__CONTENT__}
